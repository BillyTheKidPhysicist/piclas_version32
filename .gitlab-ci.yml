stages:
  - build
  - error_clean
  - reggie_checkin
  - reggie_feature_checkin
  - reggie_chemistry_nightly
  - reggie_tracking_nightly
  - reggie_nightly
  - reggie_weekly

cache:
  key: "$CI_COMMIT_SHA"
  paths: 
    - build_gnu/    
    - build_intel/    
    - reggie/

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "build": Build with intel/gnu on check-in
# ----------------------------------------------------------------------------------------------------------------------------------------------------
checkout_reggie:
  stage: build
  tags:
    - withmodules
  script:
    - rm -rf reggie || true
    - git clone git@gitlab.iag.uni-stuttgart.de:reggie/reggie.git

build_gnu:
  stage: build
  tags:
    - withmodules
  script:
    - module load env/gnu ; rm -rf build_gnu || true 
    - mkdir -p build_gnu ; cd build_gnu ; cmake .. -DBOLTZPLATZ_BUILD_HDF5=OFF ; make -j all

build_intel:
  stage: build
  tags:
    - withmodules
  script:
    - module load env/intel ; rm -rf build_intel || true 
    - mkdir -p build_intel ; cd build_intel ; cmake .. -DBOLTZPLATZ_BUILD_HDF5=OFF ; make -j all

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "clean": delete build folders if previous builds fail and exit
# ----------------------------------------------------------------------------------------------------------------------------------------------------
clean:
  stage: error_clean
  tags:
    - withmodules
  script:
    - rm -rf build_gnu
    - rm -rf build_intel
    - rm -rf share
    - rm -rf reggie
  when: on_failure

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "reggie_checkin": Run most simple reggie with previous builds on check-in
# ----------------------------------------------------------------------------------------------------------------------------------------------------
gnu:
  stage: reggie_checkin
  tags:
    - withmodules
  script:
    - module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/run_basic/maxwell -e ./bin/boltzplatz

intel:
  stage: reggie_checkin
  tags:
    - withmodules
  script:
    - module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/run_basic/maxwell -e ./bin/boltzplatz


# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "reggie_feature_checkin": Run most simple reggie features with previous builds on check-in (must be very fast)
#                               - feature_PIC_gyrotron_variable_Bz: 1 cell layer gyrotron emission with variable B(z) field
#                               - feature_PIC_single_particle_PML : 4^3 cart box with a particle and 1 cell layer PMLs for all directions
# ----------------------------------------------------------------------------------------------------------------------------------------------------
gnu_PIC_gyrotron_variable_Bz:
  stage: reggie_feature_checkin
  tags:
    - withmodules
  script:
    - module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_gyrotron_variable_Bz/maxwell -e ./bin/boltzplatz

gnu_PIC_single_particle_PML:
  stage: reggie_feature_checkin
  tags:
    - withmodules
  script:
    - module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_single_particle_PML/maxwell -e ./bin/boltzplatz
    
gnu__PIC_IMD_coupling:
  stage: reggie_feature_checkin
  tags:
    - withmodules
  script:
    - module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_IMD_coupling/maxwell -e ./bin/boltzplatz
    
gnu_DSMC:
  stage: reggie_feature_checkin
  tags:
    - withmodules
  script:
    - module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_DSMC_checkin

# intel ----------------------------------------------------------------------------------------------------------------------------------------------
    
intel_PIC_gyrotron_variable_Bz:
  stage: reggie_feature_checkin
  tags:
    - withmodules
  script:
    - module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_gyrotron_variable_Bz/maxwell -e ./bin/boltzplatz
    
intel_PIC_single_particle_PML:
  stage: reggie_feature_checkin
  tags:
    - withmodules
  script:
    - module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_single_particle_PML/maxwell -e ./bin/boltzplatz
    
intel__PIC_IMD_coupling:
  stage: reggie_feature_checkin
  tags:
    - withmodules
  script:
    - module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_IMD_coupling/maxwell -e ./bin/boltzplatz
    
intel_DSMC:
  stage: reggie_feature_checkin
  tags:
    - withmodules
  script:
    - module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_DSMC_checkin

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "reggie_tracking_nightly": Build and run tracking examples on nightly
# ----------------------------------------------------------------------------------------------------------------------------------------------------
gnu_tracking:
  stage: reggie_tracking_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu/ ; python ../reggie/reggie.py ../regressioncheck/checks/tracking_DSMC ; fi

intel_tracking:
  stage: reggie_tracking_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel/ ; python ../reggie/reggie.py ../regressioncheck/checks/tracking_DSMC ; fi

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "reggie_chemistry_nightly": Build and run chemistry examples on nightly (check reaction rates in RESERVOIR simulation)
# ----------------------------------------------------------------------------------------------------------------------------------------------------
gnu_chemistry:
  stage: reggie_chemistry_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu/ ; python ../reggie/reggie.py ../regressioncheck/checks/feature_DSMC_chemistry ; fi

intel_chemistry:
  stage: reggie_chemistry_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel/ ; python ../reggie/reggie.py ../regressioncheck/checks/feature_DSMC_chemistry ; fi

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "reggie_nightly": Build and run
#                         - feature_PIC_single_particle/ : basic PIC test with a single particle in a cart box
#                         - test particle emission for gyrotron setup with fixed electric current of 44 A
#                         - test record points for TWT setup and compare with h5diff
#                         - build all specified compile options in "run_basic" with BUILD_HDF5=ON
#                         - h-p-convtests
#                         - feature_maxwell_dipole_cylinder_PML/ : curved cylinder geometry with PML on axis and dipole in center for testing RP output
#                         - feature_maxwell_dipole_dielectric/ : curved sphere with dielectric region in the center and dipole at near the edge
#                         - feature_maxwell_ExactFlux_PML/ : inner BC that emits a planar wave in z-direction (PMLs are placed at
#                                                            the entry and exit of the cuboid domain)
#                      examples on nightly
# ----------------------------------------------------------------------------------------------------------------------------------------------------
gnu_build_all:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then  module load env/gnu ; cd build_gnu ;  python ../reggie/reggie.py ../regressioncheck/checks/run_basic ; fi
       
gnu_feature_dielectric:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then  module load env/gnu ; cd build_gnu ;  python ../reggie/reggie.py ../regressioncheck/checks/feature_dielectric ; fi

gnu_PIC:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_single_particle/ ; fi

gnu_emission_gyro:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_emission_gyrotron ; fi

gnu_TWT:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_TWT_recordpoints ; fi
       
gnu_convtest:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then  module load env/gnu ; cd build_gnu ;  python ../reggie/reggie.py ../regressioncheck/checks/convtest ; fi
       
gnu_HDG_turner:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_HDG_turner/ ; fi
       
gnu_power_density:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_poisson_powerdensity/ ; fi

gnu_maxwell_cylinder_PML:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_maxwell_dipole_cylinder_PML/ ; fi

gnu_PIC_HDG_plasma_wave:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_HDG_plasma_wave/ ; fi

gnu_maxwell_sphere_dielectric:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_maxwell_dipole_dielectric/ ; fi

gnu_maxwell_ExactFlux_PML:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_maxwell_ExactFlux_PML/ ; fi

gnu_poisson_implicit_surface_flux:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_poisson_implicitsf/ ; fi

gnu_PIC_maxwell_bgfield:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_maxwell_bgfield/ ; fi

gnu_QDS:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_QDS/ ; fi
       

# intel ----------------------------------------------------------------------------------------------------------------------------------------------
      

intel_build_all:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ;  python ../reggie/reggie.py ../regressioncheck/checks/run_basic ; fi
       
intel_feature_dielectric:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then  module load env/intel ; cd build_intel ;  python ../reggie/reggie.py ../regressioncheck/checks/feature_dielectric ; fi
       
intel_PIC:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_single_particle/ ; fi

intel_emission_gyro:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_emission_gyrotron ; fi

intel_TWT:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_TWT_recordpoints ; fi
       
intel_convtest:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then  module load env/intel ; cd build_intel ;  python ../reggie/reggie.py ../regressioncheck/checks/convtest ; fi
       
intel_HDG_turner:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_HDG_turner/ ; fi
       
intel_power_density:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_poisson_powerdensity/ ; fi

intel_maxwell_cylinder_PML:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_maxwell_dipole_cylinder_PML/ ; fi

intel_PIC_HDG_plasma_wave:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_HDG_plasma_wave/ ; fi

intel_maxwell_sphere_dielectric:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_maxwell_dipole_dielectric/ ; fi

intel_maxwell_ExactFlux_PML:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_maxwell_ExactFlux_PML/ ; fi

intel_poisson_implicit_surface_flux:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_poisson_implicitsf/ ; fi

intel_PIC_maxwell_bgfield:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_maxwell_bgfield/ ; fi

intel_QDS:
  stage: reggie_nightly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_NIGHTLY}" ]; then module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_QDS/ ; fi

# ----------------------------------------------------------------------------------------------------------------------------------------------------
# Stage "reggie_weekly": Build and run examples once a week
#                         - feature_PIC_maxwell_plasma_wave/ : test a plasma-wave with different time-integration and maxwell's equations
# ----------------------------------------------------------------------------------------------------------------------------------------------------
gnu_PIC:
  stage: reggie_weekly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_WEEKLY}" ]; then module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_maxwell_weekly ; fi

gnu_DSMC/:
  stage: reggie_weekly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_WEEKLY}" ]; then module load env/gnu ; cd build_gnu ; python ../reggie/reggie.py ../regressioncheck/checks/feature_DSMC_weekly/ ; fi

# intel ----------------------------------------------------------------------------------------------------------------------------------------------

intel_PIC:
  stage: reggie_weekly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_WEEKLY}" ]; then module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_PIC_maxwell_weekly ; fi

intel_DSMC/:
  stage: reggie_weekly
  tags:
    - withmodules
  script:
    - if [ -n "${DO_WEEKLY}" ]; then module load env/intel ; cd build_intel ; python ../reggie/reggie.py ../regressioncheck/checks/feature_DSMC_weekly/ ; fi

